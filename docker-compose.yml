services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./:/var/www/gestion-transport-aej-old-version
    working_dir: /var/www/gestion-transport-aej-old-version
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    ports:
      - "8008:80"
    volumes:
      - ./:/var/www/gestion-transport-aej-old-version
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - app-network

  node:
    image: node:18-alpine
    volumes:
      - ./:/var/www/gestion-transport-aej-old-version
    working_dir: /var/www/gestion-transport-aej-old-version
    command: sh -c "npm install && npm run build"
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: aej-old-version
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025" # SMTP port
      - "8026:8025" # Web interface port
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin:latest
    ports:
      - "9091:80"
    environment:
      - PMA_HOST=mysql
      - MYSQL_ROOT_PASSWORD=root
      - UPLOAD_LIMIT=128M
    # Commenting out this volume since it may not exist
    # volumes:
    #   - ./php.ini:/usr/local/etc/php/conf.d/php-phpmyadmin.ini
    depends_on:
      - mysql
    networks:
      - app-network

# Define the network
networks:
  app-network:
    driver: bridge

# Define volumes
volumes:
  mysql_data:
